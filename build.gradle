import org.apache.commons.lang3.SystemUtils

/*
 * Copyright (c) 2019 Frederik Kammel <vatbub123@googlemail.com>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.latestAboutLibsRelease = "8.1.2"
    ext.kotlin_version = '1.4.10'

    repositories {
        google()
        // mavenCentral()
        jcenter()
        maven { url 'https://jitpack.io' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'org.ajoberstar:grgit:2.3.0'
        classpath "com.mikepenz.aboutlibraries.plugin:aboutlibraries-plugin:${latestAboutLibsRelease}"
        classpath "org.apache.commons:commons-lang3:3.11"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        // mavenCentral()
        jcenter()
    }
}

task installGitHooks(type: Copy) {
    from new File(rootProject.rootDir, 'pre-commit')
    into { new File(rootProject.rootDir, '.git/hooks') }
}

task gitExecutableHooks() {
    dependsOn(installGitHooks)
    doLast {
        if (SystemUtils.IS_OS_WINDOWS) return
        Runtime.getRuntime().exec("chmod -R +x .git/hooks/")
    }
}

task clean(type: Delete) {
    dependsOn(gitExecutableHooks)
    delete rootProject.buildDir
}

tasks.getByPath('app:preBuild').dependsOn(gitExecutableHooks)
